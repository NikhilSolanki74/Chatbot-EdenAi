<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
    <title>Hawks ChatBot</title>
    <style>
      body {
        background-color: #dcedff;
        color: #333;
        font-family: 'Quicksand', sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }

      .chat-container {
        width: 90%;
        max-width: 600px; 
        height: 95%;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 10px 90px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
        display: flex;
        flex-direction: column;
        background: url('https://res.cloudinary.com/dzjvyptwz/image/upload/v1720611782/jc7lb8pdf6rhuzmewlkj.jpg') center/cover no-repeat;
      }

      .chat-heading {
        background-color: #4A90E2;
        padding: 15px;
        text-align: center;
        border-bottom: 1px solid #dddddd;
      }

      .chat-heading h1 {
        margin: 0;
        color: #ffffff;
        font-family: 'Poppins', sans-serif;
      }

      .chat-box {
        flex: 1;
        overflow-y: auto;
        padding: 20px;
        background-color: rgba(249, 249, 249, 0.8); /* Slightly transparent background */
        position: relative;
      }

      .message {
        margin-bottom: 15px;
        padding: 10px 15px;
        border-radius: 15px;
        max-width: 75%;
        word-wrap: break-word;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      }

      .user-message {
        background-color: #4A90E2;
        color: #ffffff;
        align-self: flex-end;
        margin-left: auto;
      }

      .bot-message {
        background-color: #d0d2ff;
        color: #333333;
        align-self: flex-start;
        margin-right: auto;
      }

      .typing-indicator {
        display: none;
        align-self: flex-start;
        margin-right: auto;
        background-color: #e0e0e0;
        color: #333333;
        border-radius: 15px;
        padding: 10px 15px;
        max-width: 75%;
        word-wrap: break-word;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        font-style: italic;
      }

      .typing-gif {
        display: inline-block;
        vertical-align: middle;
        width: 40px;
        height: 30px;
      }

      .user-input {
        display: flex;
        padding: 15px;
        background-color: #ffffff;
        border-top: 1px solid #dddddd;
      }

      .user-input input[type="text"] {
        flex: 1;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #dddddd;
        border-radius: 20px;
        margin-right: 10px;
      }

      .user-input button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #4A90E2;
        color: #ffffff;
        border: none;
        border-radius: 20px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .user-input button:hover {
        background-color: #357ABD;
      }


      @media (max-width: 768px) {
        .chat-container {
          width: 90%;
          max-width: 100%;
        }
      }

      @media (max-width: 480px) {
        .message {
          max-width: 90%;
        }
      }
    </style>
  </head>
  <body>
    <div class="chat-container">
      <div class="chat-heading">
        <h1>Hawks ChatBot</h1>
      </div>
      <div class="chat-box" id="chat-box"></div>
      <div class="user-input">
        <input type="text" id="user-input" onkeydown="handleKeyDown(event)" placeholder="Type your prompt..." />
        <button onclick="sendMessage()">Send</button>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
      function handleKeyDown(event) {
        if (event.key === "Enter") {
          sendMessage();
        }
      }

      function sendMessage() {
        var userInput = document.getElementById("user-input").value.trim();
        if (userInput !== "") {
          appendMessage("user", userInput);

          fetch("/process-message", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ message: userInput }),
          })
            .then((response) => response.json())
            .then((data) => {
              appendMessage("bot", data.response);
            })
            .catch((error) => {
              console.error("Error:", error);
              appendMessage("bot", "Oops! Something went wrong.");
            });

          document.getElementById("user-input").value = "";
        }
      }

      var kk = 0;
      function appendMessage(sender, message) {
        var chatBox = document.getElementById("chat-box");
        var messageElement = document.createElement("div");
        messageElement.classList.add(
          "message",
          sender === "user" ? "user-message" : "bot-message",
          kk++
        );

        if (sender === "bot") {
          var tx = "";
          var typingGif = document.createElement("img");
          typingGif.src = "https://res.cloudinary.com/dzjvyptwz/image/upload/v1720597838/g4h3az2192nml0etlodb.gif";
          typingGif.alt = "Typing...";
          
          typingGif.classList.add("typing-gif");
          messageElement.appendChild(typingGif);
          chatBox.appendChild(messageElement);
          var botmsg = document.getElementsByClassName(kk - 1);
          let i = 0;

          function typeCharacter() {
            if (i < message.length) {
              tx += message.charAt(i);
              messageElement.textContent = tx;
              messageElement.appendChild(typingGif);
              i++;

              let delay;
              if (Math.random() < 0.89) {
                delay = Math.floor(Math.random() * 100);
              } else {
                if (Math.random() < 0.98) {
                  delay = Math.floor(Math.random() * 150);
                } else {
                  delay = Math.floor(Math.random() * 200) + 2000;
                }
              }

           
              setTimeout(typeCharacter, delay);
            } else {
              messageElement.removeChild(typingGif);
            }
          }

          typeCharacter();
        } else {
          messageElement.textContent = message;
        }

        chatBox.appendChild(messageElement);
        // Scroll to bottom of chat box
        chatBox.scrollTop = chatBox.scrollHeight;
      }
    </script>
  </body>
</html>
